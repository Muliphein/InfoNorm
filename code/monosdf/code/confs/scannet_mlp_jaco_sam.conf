train{
    expname = scannet_mlp_jaco_sam
    dataset_class = datasets.scene_dataset.SceneDatasetDN
    model_class = model.network.MonoSDFNetwork
    loss_class = model.loss.MonoSDFLoss
    learning_rate = 5.0e-4
    lr_factor_for_grid = 20.0
    num_pixels = 1024
    checkpoint_freq = 1000
    plot_freq = 1000
    split_n_pixels = 1024
    max_total_iters = 100000
}
plot{
    plot_nimgs = 1
    resolution = 512
    grid_boundary = [-1.1, 1.1]
}
loss{
    rgb_loss = torch.nn.L1Loss
    jacobi_contrastive_weight = 0.5
    eikonal_weight = 0.05
    smooth_weight = 0.005
    depth_weight = 0.1
    normal_l1_weight = 0.05
    normal_cos_weight = 0.05
    end_step = 30000
}
dataset{
    data_dir = .
    img_res = [360, 360]
    scan_id = 1
    semantic_type = sam
    center_crop_type = no_crop
    dino_min= 0.999999
    normal_min= 0.990
}
model{
    feature_vector_size = 256
    scene_bounding_sphere = 1.1
    with_dn_dw = True
    Grid_MLP = False

    implicit_network
    {
        d_in = 3,
        d_out = 1,
        dims = [256, 256, 256, 256, 256, 256, 256, 256],
        geometric_init = True,
        bias = 0.9,
        skip_in = [4],
        weight_norm = True,
        multires = 6,
        inside_outside = True,
        with_dn_dw = True,
    }

    rendering_network
    {
        mode = idr ,
        d_in = 9 ,
        d_out = 3,
        dims = [ 256, 256],
        weight_norm = True,
        multires_view = 4,
        per_image_code = True,
    }
    density
    {
        params_init{
            beta = 0.1,
        }
        beta_min = 0.0001,
    }
    ray_sampler
    {
        near = 0.0,
        N_samples = 64,
        N_samples_eval = 128,
        N_samples_extra = 32,
        eps = 0.1,
        beta_iters = 10,
        max_total_iters = 5,
    }
}
